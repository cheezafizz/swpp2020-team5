{"ast":null,"code":"var _jsxFileName = \"/Users/jtlho/swpp/swpp-project/swpp2020-team5/frontend/src/containers/MainPage/MainPage.js\";\nimport { withRouter } from 'react-router';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport LocationPopup from './Popup/LocationPopup/LocationPopup';\nimport PreferenceVectorPopup from './Popup/PreferenceVectorPopup/PreferenceVectorPopup';\nimport FoodCategoryPopup from './Popup/FoodCategoryPopup/FoodCategoryPopup';\nimport * as actionCreators from '../../store/actions/index';\n\nclass MainPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showvectorpopup: false,\n      showlocationpopup: false,\n      showfoodpopup: false,\n      searchbyname: null\n    };\n  }\n\n  componentDidMount() {\n    this.props.onGetRestaurantlist();\n  }\n\n  toggleVectorPopup() {\n    this.setState({\n      showvectorpopup: !this.state.showvectorpopup\n    });\n  }\n\n  toggleLocationPopup() {\n    this.setState({\n      showlocationpopup: !this.state.showlocationpopup\n    });\n  }\n\n  toggleFoodPopup() {\n    this.setState({\n      showfoodpopup: !this.state.showfoodpopup\n    });\n  }\n\n  searchHandler() {//서치한 페이지로 가는 거 \n    //서치드 페이지 하나 만들어서 메인 페이지 밑에 거기다가 넣어놔야할듯\n    //서치드 페이지에는 버튼 같은거 없고 그냥 음식점 리스트랑 뒤로가기 버튼 정도만 있으면 될듯합니다.\n    //axios.get(그거 줘야할듯 파라미터)\n    //그페이지에서 검색하는 음식이 없었을 때 나올 멘트도 정해놔야할듯\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mainPage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"locationPopup\",\n      onClick: () => this.toggleLocationPopup(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, \"Change Location\"), this.state.showlocationpopup ? /*#__PURE__*/React.createElement(LocationPopup, {\n      closepopup: () => this.toggleLocationPopup(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"preferenceVectorPopup\",\n      onClick: () => this.toggleVectorPopup(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, \"Change Your Preference\"), this.state.showvectorpopup ? /*#__PURE__*/React.createElement(PreferenceVectorPopup, {\n      closepopup: () => this.toggleVectorPopup(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"foodCategoryPopup\",\n      onClick: () => this.toggleFoodPopup(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, \"Select Food Category\"), this.state.showfoodpopup ? /*#__PURE__*/React.createElement(FoodCategoryPopup, {\n      closepopup: () => this.toggleFoodPopup(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"searchByName\",\n      value: this.state.searchbyname,\n      onChange: ev => this.setState({\n        searchbyname: ev.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.searchHandler(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, \"Search\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    storedlist: state.rs.restaurantlist\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onGetRestaurantlist: () => dispatch(actionCreators.getRestaurantList())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(MainPage));","map":{"version":3,"sources":["/Users/jtlho/swpp/swpp-project/swpp2020-team5/frontend/src/containers/MainPage/MainPage.js"],"names":["withRouter","React","Component","connect","LocationPopup","PreferenceVectorPopup","FoodCategoryPopup","actionCreators","MainPage","state","showvectorpopup","showlocationpopup","showfoodpopup","searchbyname","componentDidMount","props","onGetRestaurantlist","toggleVectorPopup","setState","toggleLocationPopup","toggleFoodPopup","searchHandler","render","ev","target","value","mapStateToProps","storedlist","rs","restaurantlist","mapDispatchToProps","dispatch","getRestaurantList"],"mappings":";AAAA,SAASA,UAAT,QAA2B,cAA3B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,OAAOC,qBAAP,MAAkC,qDAAlC;AACA,OAAOC,iBAAP,MAA8B,6CAA9B;AACA,OAAO,KAAKC,cAAZ,MAAgC,2BAAhC;;AACA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAsB/BO,KAtB+B,GAsBzB;AACJC,MAAAA,eAAe,EAAC,KADZ;AAEJC,MAAAA,iBAAiB,EAAC,KAFd;AAGJC,MAAAA,aAAa,EAAC,KAHV;AAIJC,MAAAA,YAAY,EAAC;AAJT,KAtByB;AAAA;;AAC/BC,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,KAAL,CAAWC,mBAAX;AAED;;AAEDC,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,QAAL,CAAc;AAACR,MAAAA,eAAe,EAAC,CAAC,KAAKD,KAAL,CAAWC;AAA7B,KAAd;AACD;;AACDS,EAAAA,mBAAmB,GAAE;AACnB,SAAKD,QAAL,CAAc;AAACP,MAAAA,iBAAiB,EAAC,CAAC,KAAKF,KAAL,CAAWE;AAA/B,KAAd;AACD;;AACDS,EAAAA,eAAe,GAAE;AACf,SAAKF,QAAL,CAAc;AAACN,MAAAA,aAAa,EAAC,CAAC,KAAKH,KAAL,CAAWG;AAA3B,KAAd;AACD;;AACDS,EAAAA,aAAa,GAAE,CACb;AACA;AACA;AACA;AACA;AACD;;AAQDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAkC,MAAA,OAAO,EAAE,MAAI,KAAKH,mBAAL,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEG,KAAKV,KAAL,CAAWE,iBAAX,gBACD,oBAAC,aAAD;AAAe,MAAA,UAAU,EAAE,MAAI,KAAKQ,mBAAL,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADC,GAEA,IAJH,eAKE;AAAQ,MAAA,SAAS,EAAC,uBAAlB;AACA,MAAA,OAAO,EAAE,MAAI,KAAKF,iBAAL,EADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCALF,EAOG,KAAKR,KAAL,CAAWC,eAAX,gBACD,oBAAC,qBAAD;AAAuB,MAAA,UAAU,EAAE,MAAI,KAAKO,iBAAL,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADC,GAEA,IATH,eAUE;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AACC,MAAA,OAAO,EAAE,MAAI,KAAKG,eAAL,EADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAVF,EAYG,KAAKX,KAAL,CAAWG,aAAX,gBACD,oBAAC,iBAAD;AAAmB,MAAA,UAAU,EAAE,MAAI,KAAKQ,eAAL,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADC,GAEA,IAdH,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,cAAtB;AACE,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWI,YADpB;AAEE,MAAA,QAAQ,EAAGU,EAAD,IAAM,KAAKL,QAAL,CAAc;AAACL,QAAAA,YAAY,EAACU,EAAE,CAACC,MAAH,CAAUC;AAAxB,OAAd,CAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAKE;AAAQ,MAAA,OAAO,EAAE,MAAI,KAAKJ,aAAL,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,CAfF,CADF;AA+BD;;AA7D8B;;AAgEjC,MAAMK,eAAe,GAAGjB,KAAK,IAAI;AAC/B,SAAO;AACLkB,IAAAA,UAAU,EAAElB,KAAK,CAACmB,EAAN,CAASC;AADhB,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLf,IAAAA,mBAAmB,EAAE,MACnBe,QAAQ,CAACxB,cAAc,CAACyB,iBAAf,EAAD;AAFL,GAAP;AAQD,CATD;;AAWA,eAAe7B,OAAO,CAACuB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6C9B,UAAU,CAACQ,QAAD,CAAvD,CAAf","sourcesContent":["import { withRouter } from 'react-router';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport LocationPopup from './Popup/LocationPopup/LocationPopup';\nimport PreferenceVectorPopup from './Popup/PreferenceVectorPopup/PreferenceVectorPopup';\nimport FoodCategoryPopup from './Popup/FoodCategoryPopup/FoodCategoryPopup';\nimport * as actionCreators from '../../store/actions/index';\nclass MainPage extends Component {\n  componentDidMount(){\n    this.props.onGetRestaurantlist();\n\n  }\n\n  toggleVectorPopup(){\n    this.setState({showvectorpopup:!this.state.showvectorpopup});\n  }\n  toggleLocationPopup(){\n    this.setState({showlocationpopup:!this.state.showlocationpopup});\n  }\n  toggleFoodPopup(){\n    this.setState({showfoodpopup:!this.state.showfoodpopup});\n  }\n  searchHandler(){\n    //서치한 페이지로 가는 거 \n    //서치드 페이지 하나 만들어서 메인 페이지 밑에 거기다가 넣어놔야할듯\n    //서치드 페이지에는 버튼 같은거 없고 그냥 음식점 리스트랑 뒤로가기 버튼 정도만 있으면 될듯합니다.\n    //axios.get(그거 줘야할듯 파라미터)\n    //그페이지에서 검색하는 음식이 없었을 때 나올 멘트도 정해놔야할듯\n  }\n  state={\n    showvectorpopup:false,\n    showlocationpopup:false,\n    showfoodpopup:false,\n    searchbyname:null\n\n  }\n  render() {\n    return(\n      <div className = 'mainPage'>\n        <button className='locationPopup' onClick={()=>this.toggleLocationPopup()}>Change Location</button>\n        {this.state.showlocationpopup? \n        <LocationPopup closepopup={()=>this.toggleLocationPopup()}/>\n        :null}\n        <button className='preferenceVectorPopup' \n        onClick={()=>this.toggleVectorPopup()}>Change Your Preference</button>\n        {this.state.showvectorpopup? \n        <PreferenceVectorPopup closepopup={()=>this.toggleVectorPopup()}/>\n        :null}\n        <button className='foodCategoryPopup'\n         onClick={()=>this.toggleFoodPopup()}>Select Food Category</button>\n        {this.state.showfoodpopup? \n        <FoodCategoryPopup closepopup={()=>this.toggleFoodPopup()}/>\n        :null}\n        <h1>\n          <input type='text' id='searchByName'\n            value={this.state.searchbyname} \n            onChange={(ev)=>this.setState({searchbyname:ev.target.value})}>\n          </input>\n          <button onClick={()=>this.searchHandler()}>\n            Search\n          </button>\n        </h1>\n\n      </div>\n\n\n\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    storedlist: state.rs.restaurantlist\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onGetRestaurantlist: () =>\n      dispatch(actionCreators.getRestaurantList()),\n    \n\n    \n\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(MainPage))"]},"metadata":{},"sourceType":"module"}